---
title: "Learn Coding"
author: "ale66"
format: 
  revealjs:
    footer: "[github.com/ale66/learn-coding](https://github.com/ale66/learn-coding)&nbsp;&nbsp;&nbsp;"
    theme: [moon]
    preview-links: auto
    chalkboard: 
      boardmarker-width: 5
from: markdown+emoji
execute:
  echo: true
---

## Resources

::: {.incremental}
- Online materials
- install components :arrow_down:
:::

# Online materials

---

## Online materials

::: {.absolute top="0" left="100%"}
::: {.sectionhead}
1 [2 ]{style="opacity:0.25"}
:::
:::

- Moodle (MyAriel) web page for static information
  
- MS Teams channel

- online textbook

- GitHub presence

  
---

## MS Teams channel

Live broadcast and recording from the MS Teams team.

DM on Teams to request inclusion

---

## online textbook

As reference reading we will use an *Foundations of Python Programming,* a version of __Think Python__, from 

[Runestone academy](https://runestone.academy/ns/books/published/C4CSS-2024-25/index.html)

To join, please write me on Teams with these informations

![](./imgs/register-students.png)

---

## GitHub presence

A public repository with most materials is on [github.com/ale66/learn-coding](https://github.com/ale66/learn-coding)

---

## Pythontutor

Step-by-step execution of simple codes with a nice visualisation of what happens in the computer memory: a crucial tool for learning

[pythontutor.com](https://pythontutor.com/)


![](./imgs/pythontutor.png)


# Install components

---

## Install components

::: {.absolute top="0" left="100%"}
::: {.sectionhead}
1 2 []{style="opacity:0.25"}
:::
:::

### Install needed components

The following presentation relates to Win 10 laptops. 

For Win 11: you need to authorise installations. 

For MacOS: proceed to normal software dowload+installation. 
In the notes below substitute 

*Windows Power Shell* by *terminal*

*dir* by *ls -lrt*

For Linux: you don't need me :-)

---

#### Python

<img src="./imgs/python.png" height="150">

* install from [www.python.org/](https://www.python.org/)

* no need for Anaconda virtual env. (yet)

---

#### VS Code

<img src="./imgs/vscode.png" height="300">

* Free and light

* lots of extensions allow customisation

---

###### VS Code Extensions

<img src="./imgs/vscode-extensions.png" height="120">

__CTRL+Shift+x__ to the markeplace

* Python, by Microsoft

* Jupyter, by Microsoft

* Markdown All-in-one

* Simple CSV editor

---

#### PIP

an external command for your Terminal/Powershell

fetch+install *packages* containing Py. functions

Python extensively relays on packages

Get __get-pip.py__ from [the PIP web site](https://pip.pypa.io/en/stable/installation/).

```bash
> wget https://bootstrap.pypa.io/get-pip.py -o get-pip.py
```

```bash
> python get-pip.py
```

---

### Get essential modules

```bash
> pip install os
...
> pip install numpy
...
> pip install pandas
...
> pip install matplotlib
```

---

## App management

* for Win: [Chocolatey](https://chocolatey.org/)

* for iOs: [Homebrew](https://brew.sh/)


---

#### [Chocolatey](https://chocolatey.org/)

<img src="./imgs/chocolatey.png" height="180">

It manages installed software as linux does

Intallation is of average complexity

Start a __PowerShell__ in administrator mode;

see ['individual installation'](https://chocolatey.org/install#individual).

---

##### Example commands

```bash
> choco install python
```

```bash
> choco install vscode
```

```bash
> choco install pip
```

```bash
> choco upgrade python
```

```bash
# upgrade all installed packages
> choco upgrade all --yes
```

---

#### [Home Brew](https://brew.sh/)

<img src="./imgs/homebrew.png" height="180">


Essentially the same as Chocolatey, but for MacOS.

```bash
> brew --cask install visual-studio-code
```

N.B. to install Git on MacOs we need brew

---

<img src="./imgs/gitlogo.png" height="60">

- a protocol for managing code (web pages *are* code) 

- keeps track of our work so it can undo changes that disrupt previous work

- collaboration is supported so teams can work asynchronously

- branching allows to explore new ideas without spoiling the existing code

<img src="./imgs/branching-illustration.png" height="100">

---

[Github]() is a community repository for sharing code and open collaborations

[download the Git app](https://git-scm.com/downloads)

to maintain your copy of the GH repo [github.com/ale66/learn-web](https://github.com/ale66/learn-coding) up-to-date

General tendence: code is public but data is very private


---

Git implements incremental/differential synchronisation

it's easy to synchronise your local copy of a repo with the Github version

- first time: clone existing repository into a suitable folder

```bash
>git clone https://github.com/ale66/learn-coding.git
```

- updating: from a terminal working on the repository folder (or below)

```bash
>git pull
```

---

#### Further tips

* try practicing daily, in your __zone__

* try getting past frustation and *enjoy* the progress you make: you are in control now

* sign up to [Stack Overflow](https://stackoverflow.com/) to find solutions

* *do not,* at any rate, watch Python videos on YouTube...
