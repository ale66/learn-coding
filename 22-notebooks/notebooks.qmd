---
title: "Learn Coding"
author: "ale66"
format: 
  revealjs:
    footer: "[github.com/ale66/learn-coding](https://github.com/ale66/learn-coding)&nbsp;&nbsp;&nbsp;"
    theme: [moon]
    preview-links: auto
    chalkboard: 
      boardmarker-width: 5
from: markdown+emoji
execute:
  echo: true
---

## Notebooks

<br/>

::: {.incremental}
- Outline
- Kernels
- Markdown
:::

# Outline

---

## Julia, Python and R

::: {.absolute top="0" left="100%"}
::: {.sectionhead}
1 [2 3]{style="opacity:0.25"}
:::
:::

- Step-by-step execution, inside a browser

# Kernels 

::: {.absolute top="0" left="100%"}
::: {.sectionhead}
1 2 [3]{style="opacity:0.25"}
:::
:::

## Step-by-step

- we still need to access an interpreter
 
- the browser will broker our code piecemeal to the interpreter, then come back to us and print the results

- unlike traditional Py. execution, intermediate data is kept inside the browser's own memory

- Sequences of instructions to be executed together are __cells__.

- code cells are often interleaved with explanatory text/diagrams written in the *Markdown annotation language.*

# Markdown 

::: {.absolute top="0" left="100%"}
::: {.sectionhead}
1 2 3 []{style="opacity:0.25"}
:::
:::

## A mark-up language

Simple annotations to the text guide the creation of HTML (web page) displays

More complex effects are obtained by *embedding*

- HTML code for formatting
  
- LaTeX code for mathematics

---

double underscores for __boldface:__ 

```md
__boldface:__ 
```

stars for *italics:*

```markdown
*italics:*
```

A dash followed by space for lists:

```markdown
- HTML code for formatting
```

Hash symbols for titles:

```markdown
# Big title

## A bit smaller

###### tiny title
```


---

It is easy to [link text](https://www.markdownguide.org/basic-syntax/),

```markdown
[link text](https://www.markdownguide.org/basic-syntax/)
```

include images and

```markdown
![](https://mdg.imgix.net/assets/images/tux.png)
```

![](https://mdg.imgix.net/assets/images/tux.png){height="15%"}

code

<pre>
```python
# this is python!
M = 0
```
</pre>

```python
# this is python!
M = 0
```



